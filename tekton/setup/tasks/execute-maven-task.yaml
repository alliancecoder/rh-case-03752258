apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: execute-maven-task
spec:
  description: This Task can be used to run a Maven build.
  params:
    - name: MAVEN_IMAGE
      type: string
      description: Maven base image
      default: >-
        registry.access.redhat.com/ubi8/openjdk-21@sha256:7c18f5fdd2160806fb205d343f73b9920a48d2a87da5cbb70344410e81a87151
    - name: GOALS
      type: array
      description: maven goals to run
      default:
      - package
    - name: MAVEN_MIRROR_URL
      type: string
      description: The Maven repository mirror url
      default: ''
    - name: SERVER_USER
      type: string
      description: The username for the server
      default: ''
    - name: SERVER_PASSWORD
      type: string
      description: The password for the server
      default: ''
    - name: PROXY_USER
      type: string
      description: The username for the proxy server
      default: ''
    - name: PROXY_PASSWORD
      type: string
      description: The password for the proxy server
      default: ''
    - name: PROXY_PORT
      type: string
      description: Port number for the proxy server
      default: ''
    - name: PROXY_HOST
      type: string
      description: Proxy server Host
      default: ''
    - name: PROXY_NON_PROXY_HOSTS
      type: string
      description: Non proxy server host
      default: ''
    - name: PROXY_PROTOCOL
      type: string
      description: Protocol for the proxy ie http or https
      default: http
    - name: CONTEXT_DIR
      type: string
      description: >-
        The context directory within the repository for sources on which we want
        to execute maven goals.
      default: .
  sidecars:
    - args:
        - '--storage-driver=vfs'
        - '--userland-proxy=false'
        - '--debug'
      env:
        - name: DOCKER_TLS_CERTDIR
          value: /certs
      image: 'docker:dind'
      name: server
      readinessProbe:
        exec:
          command:
            - ls
            - /certs/client/ca.pem
        periodSeconds: 1
      computeResources:
        requests:
          memory: 512Mi
      securityContext:
        privileged: true
      volumeMounts:
        - mountPath: /certs/client
          name: dind-certs
        - mountPath: /var/run/
          name: dind-socket
        - mountPath: /var/lib/docker
          name: dind-storage
  # stepTemplate:
  #   env:
  #     - name: "HOME"
  #       value: "/tekton/home"
  steps:
    - name: mvn-settings
      image: 'registry.redhat.io/ubi8/ubi-minimal@sha256:6825946f10e8c81586fa7815c4f06016af05cfc231d921ec9699402a6655d201'
      computeResources: {}
      script: >
        #!/usr/bin/env bash

        [[ -f $(workspaces.maven-settings.path)/settings.xml ]] && \

        echo 'using existing $(workspaces.maven-settings.path)/settings.xml' &&
        exit 0


        cat > $(workspaces.maven-settings.path)/settings.xml <<EOF

        <settings>
          <servers>
            <!-- The servers added here are generated from environment variables. Don't change. -->
            <!-- ### SERVER's USER INFO from ENV ### -->
          </servers>
          <mirrors>
            <!-- The mirrors added here are generated from environment variables. Don't change. -->
            <!-- ### mirrors from ENV ### -->
          </mirrors>
          <proxies>
            <!-- The proxies added here are generated from environment variables. Don't change. -->
            <!-- ### HTTP proxy from ENV ### -->
          </proxies>
        </settings>

        EOF


        xml=""

        if [ -n "$(params.PROXY_HOST)" -a -n "$(params.PROXY_PORT)" ]; then
          xml="<proxy>\
            <id>genproxy</id>\
            <active>true</active>\
            <protocol>$(params.PROXY_PROTOCOL)</protocol>\
            <host>$(params.PROXY_HOST)</host>\
            <port>$(params.PROXY_PORT)</port>"
          if [ -n "$(params.PROXY_USER)" -a -n "$(params.PROXY_PASSWORD)" ]; then
            xml="$xml\
                <username>$(params.PROXY_USER)</username>\
                <password>$(params.PROXY_PASSWORD)</password>"
          fi
          if [ -n "$(params.PROXY_NON_PROXY_HOSTS)" ]; then
            xml="$xml\
                <nonProxyHosts>$(params.PROXY_NON_PROXY_HOSTS)</nonProxyHosts>"
          fi
          xml="$xml\
              </proxy>"
          sed -i "s|<!-- ### HTTP proxy from ENV ### -->|$xml|" $(workspaces.maven-settings.path)/settings.xml
        fi


        if [ -n "$(params.SERVER_USER)" -a -n "$(params.SERVER_PASSWORD)" ];
        then
          xml="<server>\
            <id>serverid</id>"
          xml="$xml\
                <username>$(params.SERVER_USER)</username>\
                <password>$(params.SERVER_PASSWORD)</password>"
          xml="$xml\
              </server>"
          sed -i "s|<!-- ### SERVER's USER INFO from ENV ### -->|$xml|" $(workspaces.maven-settings.path)/settings.xml
        fi


        if [ -n "$(params.MAVEN_MIRROR_URL)" ]; then
          xml="    <mirror>\
            <id>mirror.default</id>\
            <url>$(params.MAVEN_MIRROR_URL)</url>\
            <mirrorOf>central</mirrorOf>\
          </mirror>"
          sed -i "s|<!-- ### mirrors from ENV ### -->|$xml|" $(workspaces.maven-settings.path)/settings.xml
        fi

      securityContext:
        privileged: false

    - name: maven-goals
      image: $(params.MAVEN_IMAGE)
      workingDir: $(workspaces.source.path)/$(params.CONTEXT_DIR)
      command: ["/usr/bin/mvn"]
      args:
        - '-s'
        - $(workspaces.maven-settings.path)/settings.xml
        - $(params.GOALS)
        - '-Dmaven.repo.local=$(workspaces.maven-local-repo.path)'
      # command:
      #     - /usr/bin/mvn
      computeResources: {}
      securityContext:
        runAsNonRoot: true
        runAsUser: 185
      volumeMounts:
        - mountPath: /certs/client
          name: dind-certs
        - mountPath: /var/run/
          name: dind-socket
  volumes:
    - emptyDir: {}
      name: dind-storage
    - emptyDir: {}
      name: dind-socket
    - emptyDir: {}
      name: dind-certs
  workspaces:
    - name: source
      description: The workspace consisting of maven project.
    - name: maven-settings
      description: >-
        The workspace consisting of the custom maven settings provided by the
        user.
    - name: maven-local-repo
      description: Local maven (m2) repo
      optional: true